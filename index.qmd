---
title: "CARACTERIZACIÓN HIDROCLIMATOLÓGICA E HIDROGEOLÓGICA"
author: "REGIONES DE BOYACÁ-SANTANDER, CARIBE (OCCIDENTAL Y ORIENTAL), CAUCA-NARIÑO, META-VICHADA Y TOLIMA-HUILA"
format: 
  revealjs:
    slide-number: c/t
    # width: '95%'
    # height: '95%'
    #aspect: 16:9
    #logo: "theme/UNION-TEMPORAL.png"
    footer: "[SEI Latinoamérica](https://www.sei.org/centres/latinoamerica/)"
    theme: simple
    css: ["theme/theme.css"]
    transition: convex
    transition-speed: fast
    title-slide-attributes:
      data-background-color: "#ffffff"
      data-background-image: "theme/title-slide-background.svg"
      data-background-size: "95% 95%"
      data-background-position: "center"
---

## REGIONES DE INTERÉS

```{r}
library(leaflet)
library(sf)
library(htmltools)  # Para que los labels admitan HTML

# Cargar los datos
all_regions_wgs84 <- st_read("./data/shp/all_regions_wgs84.shp", quiet = TRUE)
colombia_wgs84 <- st_read("./data/shp/colombia_wgs84.shp", quiet = TRUE)

# Crear una función de colores para Leaflet
region_pal <- colorFactor(
  palette = c(
    "#619cff", # Meta-Vichada
    "#f565e2", # Tolima-Huila
    "#01bfc5", # Cauca-Nariño
    "#01bb38", # Caribe-Oriental
    "#b79e01", # Caribe-Occidental
    "#f8766d"  # Boyacá-Santander
  ),
  domain = all_regions_wgs84$Region
)

# Crear el mapa con Leaflet (solo labels, sin popups)
leaflet(all_regions_wgs84) %>%
  addTiles() %>%
  addPolygons(
    fillColor = ~region_pal(Region),  # CORREGIDO: ahora usa la función correctamente
    color = "black",
    weight = 1,
    fillOpacity = 0.6,
    label = ~lapply(
      paste0("<b>Región:</b> ", Region, "<br><b>Área:</b> ", area_km2, " km²"),
      HTML
    ),  # Permite que el label acepte HTML para los saltos de línea
    labelOptions = labelOptions(
      style = list("font-weight" = "bold"),   
      textsize = "12px",
      direction = "auto"
    )
  ) %>%
  addPolylines(data = colombia_wgs84, color = "black", weight = 1)

```

